Grammar

    0 $accept: programme $end

    1 programme: PROG ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    2 corps: liste_declarations liste_instructions

    3 liste_declarations: liste_declaration_var liste_declaration_type liste_declaration_proc liste_declaration_fct

    4 liste_declaration_var: /* empty */
    5                      | declaration_variable
    6                      | declaration_variable POINT_VIRGULE liste_declaration_var

    7 liste_declaration_type: /* empty */
    8                       | declaration_type
    9                       | declaration_type POINT_VIRGULE liste_declaration_type

   10 liste_declaration_proc: /* empty */
   11                       | declaration_procedure
   12                       | declaration_procedure POINT_VIRGULE liste_declaration_proc

   13 liste_declaration_fct: /* empty */
   14                      | declaration_fonction
   15                      | declaration_fonction POINT_VIRGULE liste_declaration_fct

   16 liste_instructions: DEBUT suite_liste_inst FIN

   17 suite_liste_inst: /* empty */
   18                 | instruction
   19                 | suite_liste_inst POINT_VIRGULE instruction

   20 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type

   21 suite_declaration_type: STRUCT liste_champs FSTRUCT
   22                       | TABLEAU dimension DE nom_type

   23 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT

   24 liste_dimensions: une_dimension
   25                 | liste_dimensions VIRGULE une_dimension

   26 une_dimension: expression POINT POINT expression

   27 liste_champs: un_champ
   28             | liste_champs un_champ

   29 un_champ: IDF DEUX_POINTS nom_type POINT_VIRGULE

   30 nom_type: type_simple
   31         | IDF

   32 type_simple: ENTIER
   33            | REEL
   34            | BOOLEEN
   35            | CARACTERE
   36            | CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

   37 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type
   38                     | VARIABLE IDF DEUX_POINTS nom_type OPAFF expression

   39 declaration_procedure: PROCEDURE IDF liste_parametres ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

   40 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

   41 liste_parametres: PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE

   42 liste_param: /* empty */
   43            | un_param
   44            | liste_param POINT_VIRGULE un_param

   45 un_param: IDF DEUX_POINTS type_simple

   46 instruction: affectation
   47            | condition
   48            | tant_que
   49            | repeter_tant_que
   50            | appel
   51            | RETOURNE resultat_retourne

   52 resultat_retourne: /* empty */
   53                  | expression

   54 appel: IDF liste_arguments

   55 liste_arguments: PARENTHESE_OUVRANTE PARENTHESE_FERMANTE
   56                | PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE

   57 liste_args: un_arg
   58           | liste_args VIRGULE un_arg

   59 un_arg: expression

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE

   63 affectation: variable OPAFF expression

   64 variable: IDF
   65         | IDF variable_suite

   66 variable_suite: CROCHET_OUVRANT liste_expression CROCHET_FERMANT variable_fin

   67 variable_fin: /* empty */
   68             | variable_suite

   69 expression: expression_calcul
   70           | expression expression_logique expression_calcul

   71 expression_calcul: expression_calcul PLUS expression_suite
   72                  | expression_calcul MOINS expression_suite
   73                  | expression_suite

   74 expression_suite: expression_suite MULT expression_fin
   75                 | expression_suite DIV expression_fin
   76                 | expression_fin

   77 expression_fin: PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE
   78               | constante
   79               | variable
   80               | appel

   81 liste_expression: liste_expression VIRGULE expression
   82                 | expression

   83 constante: CSTE_ENTIERE
   84          | CSTE_REEL
   85          | CSTE_STRING
   86          | CSTE_CHAR
   87          | CSTE_BOOL

   88 expression_logique: PLUS_PETIT
   89                   | PLUS_GRAND
   90                   | ET
   91                   | OU
   92                   | PLUS_PETIT_EGAL
   93                   | PLUS_GRAND_EGAL
   94                   | EGAL
   95                   | DIFFERENT


Terminals, with rules where they appear

$end (0) 0
error (256)
POINT_VIRGULE (258) 6 9 12 15 19 29 44
DEUX_POINTS (259) 20 29 37 38 45
CROCHET_OUVRANT (260) 23 36 66
CROCHET_FERMANT (261) 23 36 66
VIRGULE (262) 25 58 81
POINT (263) 26
PARENTHESE_OUVRANTE (264) 41 55 56 60 61 62 77
PARENTHESE_FERMANTE (265) 41 55 56 60 61 62 77
ACCOLADE_OUVRANTE (266) 1 39 40 60 61 62
ACCOLADE_FERMANTE (267) 1 39 40 60 61 62
CSTE_ENTIERE (268) 36 83
CSTE_REEL (269) 84
CSTE_STRING (270) 85
CSTE_CHAR (271) 86
CSTE_BOOL (272) 87
ENTIER (273) 32
REEL (274) 33
BOOLEEN (275) 34
CARACTERE (276) 35
CHAINE (277) 36
PLUS_PETIT (278) 88
PLUS_GRAND (279) 89
ET (280) 90
OU (281) 91
PLUS_PETIT_EGAL (282) 92
PLUS_GRAND_EGAL (283) 93
EGAL (284) 94
DIFFERENT (285) 95
PLUS (286) 71
MOINS (287) 72
MULT (288) 74
DIV (289) 75
TANT_QUE (290) 61 62
FAIRE (291) 61 62
SI (292) 60
ALORS (293) 60
SINON (294) 60
VARIABLE (295) 37 38
TYPE (296) 20
STRUCT (297) 21
FSTRUCT (298) 21
TABLEAU (299) 22
DE (300) 22
PROCEDURE (301) 39
FONCTION (302) 40
RETOURNE (303) 40 51
OPAFF (304) 38 63
PROG (305) 1
DEBUT (306) 16
FIN (307) 16
IDF (308) 20 29 31 37 38 39 40 45 54 64 65


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
programme (55)
    on left: 1, on right: 0
corps (56)
    on left: 2, on right: 1 39 40
liste_declarations (57)
    on left: 3, on right: 2
liste_declaration_var (58)
    on left: 4 5 6, on right: 3 6
liste_declaration_type (59)
    on left: 7 8 9, on right: 3 9
liste_declaration_proc (60)
    on left: 10 11 12, on right: 3 12
liste_declaration_fct (61)
    on left: 13 14 15, on right: 3 15
liste_instructions (62)
    on left: 16, on right: 2 60 61 62
suite_liste_inst (63)
    on left: 17 18 19, on right: 16 19
declaration_type (64)
    on left: 20, on right: 8 9
suite_declaration_type (65)
    on left: 21 22, on right: 20
dimension (66)
    on left: 23, on right: 22
liste_dimensions (67)
    on left: 24 25, on right: 23 25
une_dimension (68)
    on left: 26, on right: 24 25
liste_champs (69)
    on left: 27 28, on right: 21 28
un_champ (70)
    on left: 29, on right: 27 28
nom_type (71)
    on left: 30 31, on right: 22 29 37 38
type_simple (72)
    on left: 32 33 34 35 36, on right: 30 40 45
declaration_variable (73)
    on left: 37 38, on right: 5 6
declaration_procedure (74)
    on left: 39, on right: 11 12
declaration_fonction (75)
    on left: 40, on right: 14 15
liste_parametres (76)
    on left: 41, on right: 39 40
liste_param (77)
    on left: 42 43 44, on right: 41 44
un_param (78)
    on left: 45, on right: 43 44
instruction (79)
    on left: 46 47 48 49 50 51, on right: 18 19
resultat_retourne (80)
    on left: 52 53, on right: 51
appel (81)
    on left: 54, on right: 50 80
liste_arguments (82)
    on left: 55 56, on right: 54
liste_args (83)
    on left: 57 58, on right: 56 58
un_arg (84)
    on left: 59, on right: 57 58
condition (85)
    on left: 60, on right: 47
tant_que (86)
    on left: 61, on right: 48
repeter_tant_que (87)
    on left: 62, on right: 49
affectation (88)
    on left: 63, on right: 46
variable (89)
    on left: 64 65, on right: 63 79
variable_suite (90)
    on left: 66, on right: 65 68
variable_fin (91)
    on left: 67 68, on right: 66
expression (92)
    on left: 69 70, on right: 26 38 53 59 60 61 62 63 70 77 81 82
expression_calcul (93)
    on left: 71 72 73, on right: 69 70 71 72
expression_suite (94)
    on left: 74 75 76, on right: 71 72 73 74 75
expression_fin (95)
    on left: 77 78 79 80, on right: 74 75 76
liste_expression (96)
    on left: 81 82, on right: 66 81
constante (97)
    on left: 83 84 85 86 87, on right: 78
expression_logique (98)
    on left: 88 89 90 91 92 93 94 95, on right: 70


state 0

    0 $accept: . programme $end

    PROG  shift, and go to state 1

    programme  go to state 2


state 1

    1 programme: PROG . ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 3


state 2

    0 $accept: programme . $end

    $end  shift, and go to state 4


state 3

    1 programme: PROG ACCOLADE_OUVRANTE . corps ACCOLADE_FERMANTE

    VARIABLE  shift, and go to state 5

    $default  reduce using rule 4 (liste_declaration_var)

    corps                  go to state 6
    liste_declarations     go to state 7
    liste_declaration_var  go to state 8
    declaration_variable   go to state 9


state 4

    0 $accept: programme $end .

    $default  accept


state 5

   37 declaration_variable: VARIABLE . IDF DEUX_POINTS nom_type
   38                     | VARIABLE . IDF DEUX_POINTS nom_type OPAFF expression

    IDF  shift, and go to state 10


state 6

    1 programme: PROG ACCOLADE_OUVRANTE corps . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 11


state 7

    2 corps: liste_declarations . liste_instructions

    DEBUT  shift, and go to state 12

    liste_instructions  go to state 13


state 8

    3 liste_declarations: liste_declaration_var . liste_declaration_type liste_declaration_proc liste_declaration_fct

    TYPE  shift, and go to state 14

    $default  reduce using rule 7 (liste_declaration_type)

    liste_declaration_type  go to state 15
    declaration_type        go to state 16


state 9

    5 liste_declaration_var: declaration_variable .
    6                      | declaration_variable . POINT_VIRGULE liste_declaration_var

    POINT_VIRGULE  shift, and go to state 17

    $default  reduce using rule 5 (liste_declaration_var)


state 10

   37 declaration_variable: VARIABLE IDF . DEUX_POINTS nom_type
   38                     | VARIABLE IDF . DEUX_POINTS nom_type OPAFF expression

    DEUX_POINTS  shift, and go to state 18


state 11

    1 programme: PROG ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE .

    $default  reduce using rule 1 (programme)


state 12

   16 liste_instructions: DEBUT . suite_liste_inst FIN

    TANT_QUE  shift, and go to state 19
    FAIRE     shift, and go to state 20
    SI        shift, and go to state 21
    RETOURNE  shift, and go to state 22
    IDF       shift, and go to state 23

    $default  reduce using rule 17 (suite_liste_inst)

    suite_liste_inst  go to state 24
    instruction       go to state 25
    appel             go to state 26
    condition         go to state 27
    tant_que          go to state 28
    repeter_tant_que  go to state 29
    affectation       go to state 30
    variable          go to state 31


state 13

    2 corps: liste_declarations liste_instructions .

    $default  reduce using rule 2 (corps)


state 14

   20 declaration_type: TYPE . IDF DEUX_POINTS suite_declaration_type

    IDF  shift, and go to state 32


state 15

    3 liste_declarations: liste_declaration_var liste_declaration_type . liste_declaration_proc liste_declaration_fct

    PROCEDURE  shift, and go to state 33

    $default  reduce using rule 10 (liste_declaration_proc)

    liste_declaration_proc  go to state 34
    declaration_procedure   go to state 35


state 16

    8 liste_declaration_type: declaration_type .
    9                       | declaration_type . POINT_VIRGULE liste_declaration_type

    POINT_VIRGULE  shift, and go to state 36

    $default  reduce using rule 8 (liste_declaration_type)


state 17

    6 liste_declaration_var: declaration_variable POINT_VIRGULE . liste_declaration_var

    VARIABLE  shift, and go to state 5

    $default  reduce using rule 4 (liste_declaration_var)

    liste_declaration_var  go to state 37
    declaration_variable   go to state 9


state 18

   37 declaration_variable: VARIABLE IDF DEUX_POINTS . nom_type
   38                     | VARIABLE IDF DEUX_POINTS . nom_type OPAFF expression

    ENTIER     shift, and go to state 38
    REEL       shift, and go to state 39
    BOOLEEN    shift, and go to state 40
    CARACTERE  shift, and go to state 41
    CHAINE     shift, and go to state 42
    IDF        shift, and go to state 43

    nom_type     go to state 44
    type_simple  go to state 45


state 19

   61 tant_que: TANT_QUE . PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 46


state 20

   62 repeter_tant_que: FAIRE . ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 47


state 21

   60 condition: SI . PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 48


state 22

   51 instruction: RETOURNE . resultat_retourne

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    $default  reduce using rule 52 (resultat_retourne)

    resultat_retourne  go to state 55
    appel              go to state 56
    variable           go to state 57
    expression         go to state 58
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 23

   54 appel: IDF . liste_arguments
   64 variable: IDF .
   65         | IDF . variable_suite

    CROCHET_OUVRANT      shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    $default  reduce using rule 64 (variable)

    liste_arguments  go to state 65
    variable_suite   go to state 66


state 24

   16 liste_instructions: DEBUT suite_liste_inst . FIN
   19 suite_liste_inst: suite_liste_inst . POINT_VIRGULE instruction

    POINT_VIRGULE  shift, and go to state 67
    FIN            shift, and go to state 68


state 25

   18 suite_liste_inst: instruction .

    $default  reduce using rule 18 (suite_liste_inst)


state 26

   50 instruction: appel .

    $default  reduce using rule 50 (instruction)


state 27

   47 instruction: condition .

    $default  reduce using rule 47 (instruction)


state 28

   48 instruction: tant_que .

    $default  reduce using rule 48 (instruction)


state 29

   49 instruction: repeter_tant_que .

    $default  reduce using rule 49 (instruction)


state 30

   46 instruction: affectation .

    $default  reduce using rule 46 (instruction)


state 31

   63 affectation: variable . OPAFF expression

    OPAFF  shift, and go to state 69


state 32

   20 declaration_type: TYPE IDF . DEUX_POINTS suite_declaration_type

    DEUX_POINTS  shift, and go to state 70


state 33

   39 declaration_procedure: PROCEDURE . IDF liste_parametres ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    IDF  shift, and go to state 71


state 34

    3 liste_declarations: liste_declaration_var liste_declaration_type liste_declaration_proc . liste_declaration_fct

    FONCTION  shift, and go to state 72

    $default  reduce using rule 13 (liste_declaration_fct)

    liste_declaration_fct  go to state 73
    declaration_fonction   go to state 74


state 35

   11 liste_declaration_proc: declaration_procedure .
   12                       | declaration_procedure . POINT_VIRGULE liste_declaration_proc

    POINT_VIRGULE  shift, and go to state 75

    $default  reduce using rule 11 (liste_declaration_proc)


state 36

    9 liste_declaration_type: declaration_type POINT_VIRGULE . liste_declaration_type

    TYPE  shift, and go to state 14

    $default  reduce using rule 7 (liste_declaration_type)

    liste_declaration_type  go to state 76
    declaration_type        go to state 16


state 37

    6 liste_declaration_var: declaration_variable POINT_VIRGULE liste_declaration_var .

    $default  reduce using rule 6 (liste_declaration_var)


state 38

   32 type_simple: ENTIER .

    $default  reduce using rule 32 (type_simple)


state 39

   33 type_simple: REEL .

    $default  reduce using rule 33 (type_simple)


state 40

   34 type_simple: BOOLEEN .

    $default  reduce using rule 34 (type_simple)


state 41

   35 type_simple: CARACTERE .

    $default  reduce using rule 35 (type_simple)


state 42

   36 type_simple: CHAINE . CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

    CROCHET_OUVRANT  shift, and go to state 77


state 43

   31 nom_type: IDF .

    $default  reduce using rule 31 (nom_type)


state 44

   37 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type .
   38                     | VARIABLE IDF DEUX_POINTS nom_type . OPAFF expression

    OPAFF  shift, and go to state 78

    $default  reduce using rule 37 (declaration_variable)


state 45

   30 nom_type: type_simple .

    $default  reduce using rule 30 (nom_type)


state 46

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE . expression PARENTHESE_FERMANTE FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 79
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 47

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE . liste_instructions ACCOLADE_FERMANTE TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE

    DEBUT  shift, and go to state 12

    liste_instructions  go to state 80


state 48

   60 condition: SI PARENTHESE_OUVRANTE . expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 81
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 49

   77 expression_fin: PARENTHESE_OUVRANTE . expression PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 82
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 50

   83 constante: CSTE_ENTIERE .

    $default  reduce using rule 83 (constante)


state 51

   84 constante: CSTE_REEL .

    $default  reduce using rule 84 (constante)


state 52

   85 constante: CSTE_STRING .

    $default  reduce using rule 85 (constante)


state 53

   86 constante: CSTE_CHAR .

    $default  reduce using rule 86 (constante)


state 54

   87 constante: CSTE_BOOL .

    $default  reduce using rule 87 (constante)


state 55

   51 instruction: RETOURNE resultat_retourne .

    $default  reduce using rule 51 (instruction)


state 56

   80 expression_fin: appel .

    $default  reduce using rule 80 (expression_fin)


state 57

   79 expression_fin: variable .

    $default  reduce using rule 79 (expression_fin)


state 58

   53 resultat_retourne: expression .
   70 expression: expression . expression_logique expression_calcul

    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    $default  reduce using rule 53 (resultat_retourne)

    expression_logique  go to state 91


state 59

   69 expression: expression_calcul .
   71 expression_calcul: expression_calcul . PLUS expression_suite
   72                  | expression_calcul . MOINS expression_suite

    PLUS   shift, and go to state 92
    MOINS  shift, and go to state 93

    $default  reduce using rule 69 (expression)


state 60

   73 expression_calcul: expression_suite .
   74 expression_suite: expression_suite . MULT expression_fin
   75                 | expression_suite . DIV expression_fin

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95

    $default  reduce using rule 73 (expression_calcul)


state 61

   76 expression_suite: expression_fin .

    $default  reduce using rule 76 (expression_suite)


state 62

   78 expression_fin: constante .

    $default  reduce using rule 78 (expression_fin)


state 63

   66 variable_suite: CROCHET_OUVRANT . liste_expression CROCHET_FERMANT variable_fin

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 96
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    liste_expression   go to state 97
    constante          go to state 62


state 64

   55 liste_arguments: PARENTHESE_OUVRANTE . PARENTHESE_FERMANTE
   56                | PARENTHESE_OUVRANTE . liste_args PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 49
    PARENTHESE_FERMANTE  shift, and go to state 98
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    liste_args         go to state 99
    un_arg             go to state 100
    variable           go to state 57
    expression         go to state 101
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 65

   54 appel: IDF liste_arguments .

    $default  reduce using rule 54 (appel)


state 66

   65 variable: IDF variable_suite .

    $default  reduce using rule 65 (variable)


state 67

   19 suite_liste_inst: suite_liste_inst POINT_VIRGULE . instruction

    TANT_QUE  shift, and go to state 19
    FAIRE     shift, and go to state 20
    SI        shift, and go to state 21
    RETOURNE  shift, and go to state 22
    IDF       shift, and go to state 23

    instruction       go to state 102
    appel             go to state 26
    condition         go to state 27
    tant_que          go to state 28
    repeter_tant_que  go to state 29
    affectation       go to state 30
    variable          go to state 31


state 68

   16 liste_instructions: DEBUT suite_liste_inst FIN .

    $default  reduce using rule 16 (liste_instructions)


state 69

   63 affectation: variable OPAFF . expression

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 103
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 70

   20 declaration_type: TYPE IDF DEUX_POINTS . suite_declaration_type

    STRUCT   shift, and go to state 104
    TABLEAU  shift, and go to state 105

    suite_declaration_type  go to state 106


state 71

   39 declaration_procedure: PROCEDURE IDF . liste_parametres ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 107

    liste_parametres  go to state 108


state 72

   40 declaration_fonction: FONCTION . IDF liste_parametres RETOURNE type_simple ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    IDF  shift, and go to state 109


state 73

    3 liste_declarations: liste_declaration_var liste_declaration_type liste_declaration_proc liste_declaration_fct .

    $default  reduce using rule 3 (liste_declarations)


state 74

   14 liste_declaration_fct: declaration_fonction .
   15                      | declaration_fonction . POINT_VIRGULE liste_declaration_fct

    POINT_VIRGULE  shift, and go to state 110

    $default  reduce using rule 14 (liste_declaration_fct)


state 75

   12 liste_declaration_proc: declaration_procedure POINT_VIRGULE . liste_declaration_proc

    PROCEDURE  shift, and go to state 33

    $default  reduce using rule 10 (liste_declaration_proc)

    liste_declaration_proc  go to state 111
    declaration_procedure   go to state 35


state 76

    9 liste_declaration_type: declaration_type POINT_VIRGULE liste_declaration_type .

    $default  reduce using rule 9 (liste_declaration_type)


state 77

   36 type_simple: CHAINE CROCHET_OUVRANT . CSTE_ENTIERE CROCHET_FERMANT

    CSTE_ENTIERE  shift, and go to state 112


state 78

   38 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type OPAFF . expression

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 113
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 79

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE expression . PARENTHESE_FERMANTE FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE
   70 expression: expression . expression_logique expression_calcul

    PARENTHESE_FERMANTE  shift, and go to state 114
    PLUS_PETIT           shift, and go to state 83
    PLUS_GRAND           shift, and go to state 84
    ET                   shift, and go to state 85
    OU                   shift, and go to state 86
    PLUS_PETIT_EGAL      shift, and go to state 87
    PLUS_GRAND_EGAL      shift, and go to state 88
    EGAL                 shift, and go to state 89
    DIFFERENT            shift, and go to state 90

    expression_logique  go to state 91


state 80

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE liste_instructions . ACCOLADE_FERMANTE TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 115


state 81

   60 condition: SI PARENTHESE_OUVRANTE expression . PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE
   70 expression: expression . expression_logique expression_calcul

    PARENTHESE_FERMANTE  shift, and go to state 116
    PLUS_PETIT           shift, and go to state 83
    PLUS_GRAND           shift, and go to state 84
    ET                   shift, and go to state 85
    OU                   shift, and go to state 86
    PLUS_PETIT_EGAL      shift, and go to state 87
    PLUS_GRAND_EGAL      shift, and go to state 88
    EGAL                 shift, and go to state 89
    DIFFERENT            shift, and go to state 90

    expression_logique  go to state 91


state 82

   70 expression: expression . expression_logique expression_calcul
   77 expression_fin: PARENTHESE_OUVRANTE expression . PARENTHESE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 117
    PLUS_PETIT           shift, and go to state 83
    PLUS_GRAND           shift, and go to state 84
    ET                   shift, and go to state 85
    OU                   shift, and go to state 86
    PLUS_PETIT_EGAL      shift, and go to state 87
    PLUS_GRAND_EGAL      shift, and go to state 88
    EGAL                 shift, and go to state 89
    DIFFERENT            shift, and go to state 90

    expression_logique  go to state 91


state 83

   88 expression_logique: PLUS_PETIT .

    $default  reduce using rule 88 (expression_logique)


state 84

   89 expression_logique: PLUS_GRAND .

    $default  reduce using rule 89 (expression_logique)


state 85

   90 expression_logique: ET .

    $default  reduce using rule 90 (expression_logique)


state 86

   91 expression_logique: OU .

    $default  reduce using rule 91 (expression_logique)


state 87

   92 expression_logique: PLUS_PETIT_EGAL .

    $default  reduce using rule 92 (expression_logique)


state 88

   93 expression_logique: PLUS_GRAND_EGAL .

    $default  reduce using rule 93 (expression_logique)


state 89

   94 expression_logique: EGAL .

    $default  reduce using rule 94 (expression_logique)


state 90

   95 expression_logique: DIFFERENT .

    $default  reduce using rule 95 (expression_logique)


state 91

   70 expression: expression expression_logique . expression_calcul

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression_calcul  go to state 118
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 92

   71 expression_calcul: expression_calcul PLUS . expression_suite

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel             go to state 56
    variable          go to state 57
    expression_suite  go to state 119
    expression_fin    go to state 61
    constante         go to state 62


state 93

   72 expression_calcul: expression_calcul MOINS . expression_suite

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel             go to state 56
    variable          go to state 57
    expression_suite  go to state 120
    expression_fin    go to state 61
    constante         go to state 62


state 94

   74 expression_suite: expression_suite MULT . expression_fin

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel           go to state 56
    variable        go to state 57
    expression_fin  go to state 121
    constante       go to state 62


state 95

   75 expression_suite: expression_suite DIV . expression_fin

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel           go to state 56
    variable        go to state 57
    expression_fin  go to state 122
    constante       go to state 62


state 96

   70 expression: expression . expression_logique expression_calcul
   82 liste_expression: expression .

    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    $default  reduce using rule 82 (liste_expression)

    expression_logique  go to state 91


state 97

   66 variable_suite: CROCHET_OUVRANT liste_expression . CROCHET_FERMANT variable_fin
   81 liste_expression: liste_expression . VIRGULE expression

    CROCHET_FERMANT  shift, and go to state 123
    VIRGULE          shift, and go to state 124


state 98

   55 liste_arguments: PARENTHESE_OUVRANTE PARENTHESE_FERMANTE .

    $default  reduce using rule 55 (liste_arguments)


state 99

   56 liste_arguments: PARENTHESE_OUVRANTE liste_args . PARENTHESE_FERMANTE
   58 liste_args: liste_args . VIRGULE un_arg

    VIRGULE              shift, and go to state 125
    PARENTHESE_FERMANTE  shift, and go to state 126


state 100

   57 liste_args: un_arg .

    $default  reduce using rule 57 (liste_args)


state 101

   59 un_arg: expression .
   70 expression: expression . expression_logique expression_calcul

    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    $default  reduce using rule 59 (un_arg)

    expression_logique  go to state 91


state 102

   19 suite_liste_inst: suite_liste_inst POINT_VIRGULE instruction .

    $default  reduce using rule 19 (suite_liste_inst)


state 103

   63 affectation: variable OPAFF expression .
   70 expression: expression . expression_logique expression_calcul

    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    $default  reduce using rule 63 (affectation)

    expression_logique  go to state 91


state 104

   21 suite_declaration_type: STRUCT . liste_champs FSTRUCT

    IDF  shift, and go to state 127

    liste_champs  go to state 128
    un_champ      go to state 129


state 105

   22 suite_declaration_type: TABLEAU . dimension DE nom_type

    CROCHET_OUVRANT  shift, and go to state 130

    dimension  go to state 131


state 106

   20 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type .

    $default  reduce using rule 20 (declaration_type)


state 107

   41 liste_parametres: PARENTHESE_OUVRANTE . liste_param PARENTHESE_FERMANTE

    IDF  shift, and go to state 132

    $default  reduce using rule 42 (liste_param)

    liste_param  go to state 133
    un_param     go to state 134


state 108

   39 declaration_procedure: PROCEDURE IDF liste_parametres . ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 135


state 109

   40 declaration_fonction: FONCTION IDF . liste_parametres RETOURNE type_simple ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 107

    liste_parametres  go to state 136


state 110

   15 liste_declaration_fct: declaration_fonction POINT_VIRGULE . liste_declaration_fct

    FONCTION  shift, and go to state 72

    $default  reduce using rule 13 (liste_declaration_fct)

    liste_declaration_fct  go to state 137
    declaration_fonction   go to state 74


state 111

   12 liste_declaration_proc: declaration_procedure POINT_VIRGULE liste_declaration_proc .

    $default  reduce using rule 12 (liste_declaration_proc)


state 112

   36 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE . CROCHET_FERMANT

    CROCHET_FERMANT  shift, and go to state 138


state 113

   38 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type OPAFF expression .
   70 expression: expression . expression_logique expression_calcul

    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    $default  reduce using rule 38 (declaration_variable)

    expression_logique  go to state 91


state 114

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE . FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    FAIRE  shift, and go to state 139


state 115

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE . TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE

    TANT_QUE  shift, and go to state 140


state 116

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE . ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    ALORS  shift, and go to state 141


state 117

   77 expression_fin: PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE .

    $default  reduce using rule 77 (expression_fin)


state 118

   70 expression: expression expression_logique expression_calcul .
   71 expression_calcul: expression_calcul . PLUS expression_suite
   72                  | expression_calcul . MOINS expression_suite

    PLUS   shift, and go to state 92
    MOINS  shift, and go to state 93

    $default  reduce using rule 70 (expression)


state 119

   71 expression_calcul: expression_calcul PLUS expression_suite .
   74 expression_suite: expression_suite . MULT expression_fin
   75                 | expression_suite . DIV expression_fin

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95

    $default  reduce using rule 71 (expression_calcul)


state 120

   72 expression_calcul: expression_calcul MOINS expression_suite .
   74 expression_suite: expression_suite . MULT expression_fin
   75                 | expression_suite . DIV expression_fin

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95

    $default  reduce using rule 72 (expression_calcul)


state 121

   74 expression_suite: expression_suite MULT expression_fin .

    $default  reduce using rule 74 (expression_suite)


state 122

   75 expression_suite: expression_suite DIV expression_fin .

    $default  reduce using rule 75 (expression_suite)


state 123

   66 variable_suite: CROCHET_OUVRANT liste_expression CROCHET_FERMANT . variable_fin

    CROCHET_OUVRANT  shift, and go to state 63

    $default  reduce using rule 67 (variable_fin)

    variable_suite  go to state 142
    variable_fin    go to state 143


state 124

   81 liste_expression: liste_expression VIRGULE . expression

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 144
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 125

   58 liste_args: liste_args VIRGULE . un_arg

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    un_arg             go to state 145
    variable           go to state 57
    expression         go to state 101
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 126

   56 liste_arguments: PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE .

    $default  reduce using rule 56 (liste_arguments)


state 127

   29 un_champ: IDF . DEUX_POINTS nom_type POINT_VIRGULE

    DEUX_POINTS  shift, and go to state 146


state 128

   21 suite_declaration_type: STRUCT liste_champs . FSTRUCT
   28 liste_champs: liste_champs . un_champ

    FSTRUCT  shift, and go to state 147
    IDF      shift, and go to state 127

    un_champ  go to state 148


state 129

   27 liste_champs: un_champ .

    $default  reduce using rule 27 (liste_champs)


state 130

   23 dimension: CROCHET_OUVRANT . liste_dimensions CROCHET_FERMANT

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    liste_dimensions   go to state 149
    une_dimension      go to state 150
    appel              go to state 56
    variable           go to state 57
    expression         go to state 151
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 131

   22 suite_declaration_type: TABLEAU dimension . DE nom_type

    DE  shift, and go to state 152


state 132

   45 un_param: IDF . DEUX_POINTS type_simple

    DEUX_POINTS  shift, and go to state 153


state 133

   41 liste_parametres: PARENTHESE_OUVRANTE liste_param . PARENTHESE_FERMANTE
   44 liste_param: liste_param . POINT_VIRGULE un_param

    POINT_VIRGULE        shift, and go to state 154
    PARENTHESE_FERMANTE  shift, and go to state 155


state 134

   43 liste_param: un_param .

    $default  reduce using rule 43 (liste_param)


state 135

   39 declaration_procedure: PROCEDURE IDF liste_parametres ACCOLADE_OUVRANTE . corps ACCOLADE_FERMANTE

    VARIABLE  shift, and go to state 5

    $default  reduce using rule 4 (liste_declaration_var)

    corps                  go to state 156
    liste_declarations     go to state 7
    liste_declaration_var  go to state 8
    declaration_variable   go to state 9


state 136

   40 declaration_fonction: FONCTION IDF liste_parametres . RETOURNE type_simple ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    RETOURNE  shift, and go to state 157


state 137

   15 liste_declaration_fct: declaration_fonction POINT_VIRGULE liste_declaration_fct .

    $default  reduce using rule 15 (liste_declaration_fct)


state 138

   36 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT .

    $default  reduce using rule 36 (type_simple)


state 139

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE FAIRE . ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 158


state 140

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE TANT_QUE . PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 159


state 141

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS . ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 160


state 142

   68 variable_fin: variable_suite .

    $default  reduce using rule 68 (variable_fin)


state 143

   66 variable_suite: CROCHET_OUVRANT liste_expression CROCHET_FERMANT variable_fin .

    $default  reduce using rule 66 (variable_suite)


state 144

   70 expression: expression . expression_logique expression_calcul
   81 liste_expression: liste_expression VIRGULE expression .

    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    $default  reduce using rule 81 (liste_expression)

    expression_logique  go to state 91


state 145

   58 liste_args: liste_args VIRGULE un_arg .

    $default  reduce using rule 58 (liste_args)


state 146

   29 un_champ: IDF DEUX_POINTS . nom_type POINT_VIRGULE

    ENTIER     shift, and go to state 38
    REEL       shift, and go to state 39
    BOOLEEN    shift, and go to state 40
    CARACTERE  shift, and go to state 41
    CHAINE     shift, and go to state 42
    IDF        shift, and go to state 43

    nom_type     go to state 161
    type_simple  go to state 45


state 147

   21 suite_declaration_type: STRUCT liste_champs FSTRUCT .

    $default  reduce using rule 21 (suite_declaration_type)


state 148

   28 liste_champs: liste_champs un_champ .

    $default  reduce using rule 28 (liste_champs)


state 149

   23 dimension: CROCHET_OUVRANT liste_dimensions . CROCHET_FERMANT
   25 liste_dimensions: liste_dimensions . VIRGULE une_dimension

    CROCHET_FERMANT  shift, and go to state 162
    VIRGULE          shift, and go to state 163


state 150

   24 liste_dimensions: une_dimension .

    $default  reduce using rule 24 (liste_dimensions)


state 151

   26 une_dimension: expression . POINT POINT expression
   70 expression: expression . expression_logique expression_calcul

    POINT            shift, and go to state 164
    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    expression_logique  go to state 91


state 152

   22 suite_declaration_type: TABLEAU dimension DE . nom_type

    ENTIER     shift, and go to state 38
    REEL       shift, and go to state 39
    BOOLEEN    shift, and go to state 40
    CARACTERE  shift, and go to state 41
    CHAINE     shift, and go to state 42
    IDF        shift, and go to state 43

    nom_type     go to state 165
    type_simple  go to state 45


state 153

   45 un_param: IDF DEUX_POINTS . type_simple

    ENTIER     shift, and go to state 38
    REEL       shift, and go to state 39
    BOOLEEN    shift, and go to state 40
    CARACTERE  shift, and go to state 41
    CHAINE     shift, and go to state 42

    type_simple  go to state 166


state 154

   44 liste_param: liste_param POINT_VIRGULE . un_param

    IDF  shift, and go to state 132

    un_param  go to state 167


state 155

   41 liste_parametres: PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE .

    $default  reduce using rule 41 (liste_parametres)


state 156

   39 declaration_procedure: PROCEDURE IDF liste_parametres ACCOLADE_OUVRANTE corps . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 168


state 157

   40 declaration_fonction: FONCTION IDF liste_parametres RETOURNE . type_simple ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    ENTIER     shift, and go to state 38
    REEL       shift, and go to state 39
    BOOLEEN    shift, and go to state 40
    CARACTERE  shift, and go to state 41
    CHAINE     shift, and go to state 42

    type_simple  go to state 169


state 158

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE FAIRE ACCOLADE_OUVRANTE . liste_instructions ACCOLADE_FERMANTE

    DEBUT  shift, and go to state 12

    liste_instructions  go to state 170


state 159

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE TANT_QUE PARENTHESE_OUVRANTE . expression PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 171
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 160

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE . liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    DEBUT  shift, and go to state 12

    liste_instructions  go to state 172


state 161

   29 un_champ: IDF DEUX_POINTS nom_type . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 173


state 162

   23 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT .

    $default  reduce using rule 23 (dimension)


state 163

   25 liste_dimensions: liste_dimensions VIRGULE . une_dimension

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    une_dimension      go to state 174
    appel              go to state 56
    variable           go to state 57
    expression         go to state 151
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 164

   26 une_dimension: expression POINT . POINT expression

    POINT  shift, and go to state 175


state 165

   22 suite_declaration_type: TABLEAU dimension DE nom_type .

    $default  reduce using rule 22 (suite_declaration_type)


state 166

   45 un_param: IDF DEUX_POINTS type_simple .

    $default  reduce using rule 45 (un_param)


state 167

   44 liste_param: liste_param POINT_VIRGULE un_param .

    $default  reduce using rule 44 (liste_param)


state 168

   39 declaration_procedure: PROCEDURE IDF liste_parametres ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE .

    $default  reduce using rule 39 (declaration_procedure)


state 169

   40 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple . ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 176


state 170

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE FAIRE ACCOLADE_OUVRANTE liste_instructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 177


state 171

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE TANT_QUE PARENTHESE_OUVRANTE expression . PARENTHESE_FERMANTE
   70 expression: expression . expression_logique expression_calcul

    PARENTHESE_FERMANTE  shift, and go to state 178
    PLUS_PETIT           shift, and go to state 83
    PLUS_GRAND           shift, and go to state 84
    ET                   shift, and go to state 85
    OU                   shift, and go to state 86
    PLUS_PETIT_EGAL      shift, and go to state 87
    PLUS_GRAND_EGAL      shift, and go to state 88
    EGAL                 shift, and go to state 89
    DIFFERENT            shift, and go to state 90

    expression_logique  go to state 91


state 172

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions . ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 179


state 173

   29 un_champ: IDF DEUX_POINTS nom_type POINT_VIRGULE .

    $default  reduce using rule 29 (un_champ)


state 174

   25 liste_dimensions: liste_dimensions VIRGULE une_dimension .

    $default  reduce using rule 25 (liste_dimensions)


state 175

   26 une_dimension: expression POINT POINT . expression

    PARENTHESE_OUVRANTE  shift, and go to state 49
    CSTE_ENTIERE         shift, and go to state 50
    CSTE_REEL            shift, and go to state 51
    CSTE_STRING          shift, and go to state 52
    CSTE_CHAR            shift, and go to state 53
    CSTE_BOOL            shift, and go to state 54
    IDF                  shift, and go to state 23

    appel              go to state 56
    variable           go to state 57
    expression         go to state 180
    expression_calcul  go to state 59
    expression_suite   go to state 60
    expression_fin     go to state 61
    constante          go to state 62


state 176

   40 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple ACCOLADE_OUVRANTE . corps ACCOLADE_FERMANTE

    VARIABLE  shift, and go to state 5

    $default  reduce using rule 4 (liste_declaration_var)

    corps                  go to state 181
    liste_declarations     go to state 7
    liste_declaration_var  go to state 8
    declaration_variable   go to state 9


state 177

   61 tant_que: TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE .

    $default  reduce using rule 61 (tant_que)


state 178

   62 repeter_tant_que: FAIRE ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE TANT_QUE PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE .

    $default  reduce using rule 62 (repeter_tant_que)


state 179

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE . SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    SINON  shift, and go to state 182


state 180

   26 une_dimension: expression POINT POINT expression .
   70 expression: expression . expression_logique expression_calcul

    PLUS_PETIT       shift, and go to state 83
    PLUS_GRAND       shift, and go to state 84
    ET               shift, and go to state 85
    OU               shift, and go to state 86
    PLUS_PETIT_EGAL  shift, and go to state 87
    PLUS_GRAND_EGAL  shift, and go to state 88
    EGAL             shift, and go to state 89
    DIFFERENT        shift, and go to state 90

    $default  reduce using rule 26 (une_dimension)

    expression_logique  go to state 91


state 181

   40 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple ACCOLADE_OUVRANTE corps . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 183


state 182

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON . ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 184


state 183

   40 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple ACCOLADE_OUVRANTE corps ACCOLADE_FERMANTE .

    $default  reduce using rule 40 (declaration_fonction)


state 184

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE . liste_instructions ACCOLADE_FERMANTE

    DEBUT  shift, and go to state 12

    liste_instructions  go to state 185


state 185

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 186


state 186

   60 condition: SI PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE ALORS ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE liste_instructions ACCOLADE_FERMANTE .

    $default  reduce using rule 60 (condition)
